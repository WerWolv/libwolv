name: Build

on:
  push:
    branches: ["*"]
  pull_request:

jobs:
  build-windows:
    runs-on: windows-2022
    name: 🪟 Windows build
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: 🧰 Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
        
      - name: 🟦 Install msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          pacboy: >-
            gcc:p
            cmake:p
            make:p

      - name: 🛠️ Build
        run: |
          cmake -DLIBWOLV_ENABLE_TESTS=ON -B build
          cmake --build build -j 4

      - name: 🛠️ Build tests
        run: |
          cmake --build build -j 4 -- libwolv-tests

      - name: 🧪 Run tests
        run: |
          cd build
          ctest --output-on-failure


  build-linux:
    runs-on: ubuntu-22.04
    name: 🐧 Linux build
    
    steps:
      - name: 🧰 Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: 🛠️ Build tests
        run: |
          cmake -DLIBWOLV_ENABLE_TESTS=ON -DCMAKE_C_FLAGS="--coverage" -DCMAKE_CXX_FLAGS="--coverage" -B build
          cmake --build build -j 4 -- libwolv-tests

      - name: 🧪 Run tests
        run: |
          cd build
          ctest --output-on-failure

      # Generate report from all gcov .gcda files
      - name: 🧪 Generate coverage report
        run: |
          sudo apt install -y gcovr
          gcovr --gcov-executable /usr/bin/gcov-12 -r . build --xml coverage_report.xml --verbose

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage_report.xml

  build-macos:
    runs-on: macos-11
    name: 🍎 MacOS build

    steps:
      - name: 🧰 Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ⬇️ Install gcc
        run: |
          brew install gcc@12 llvm

      - name: 🛠️ Build
        run: |
          CC=$(brew --prefix gcc@12)/bin/gcc-12    \
          CXX=$(brew --prefix gcc@12)/bin/g++-12   \
          OBJC=$(brew --prefix llvm)/bin/clang     \
          OBJCXX=$(brew --prefix llvm)/bin/clang++ \
          cmake -DLIBWOLV_ENABLE_TESTS=ON -B build
          cmake --build build -j 4

      - name: 🛠️ Build tests
        run: |
          cmake --build build -j 4 -- libwolv-tests

      - name: 🧪 Run tests
        run: |
          cd build
          ctest --output-on-failure
